import numpy as np
from numpy.testing import assert_array_equal
from skimage.filter.inpaint import inpaint_fmm, _init_fmm
from skimage.filter._inpaint import fast_marching_method


def test_basic():
    mask = np.array(
        [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=np.uint8)

    image = np.array(
        [[186, 187, 188, 185, 183, 185, 185, 176, 160, 129, 93, 51, 18, 8, 10],
         [186, 187, 187, 184, 182, 184, 180, 159, 127, 77, 32, 18, 16, 13, 13],
         [185, 185, 185, 184, 184, 183, 174, 146, 107, 59, 18, 10, 13, 12, 13],
         [186, 185, 184, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 12, 14],
         [186, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 13, 14],
         [187, 187, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 14, 15],
         [187, 187, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 13, 13],
         [189, 188, 188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 13, 11],
         [190, 189, 190, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 10, 10],
         [191, 191, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 9, 10],
         [187, 188, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 10],
         [185, 187, 190, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10],
         [188, 191, 191, 189, 170, 98, 29, 12, 13, 10, 10, 9, 10, 9, 9],
         [192, 196, 194, 174, 140, 76, 19, 10, 16, 13, 11, 10, 11, 9, 9],
         [189, 196, 193, 159, 113, 58, 13, 6, 13, 12, 11, 10, 10, 8, 9]],
        dtype=np.float)

    expected = np.array(
        [[186, 187, 188, 185, 183, 185, 185, 176, 160, 129, 93, 51, 18, 8, 10],
         [186, 187, 187, 184, 182, 184, 180, 159, 127, 77, 32, 18, 16, 13, 13],
         [185, 185, 185, 184, 184, 183, 174, 146, 107, 59, 18, 10, 13, 12, 13],
         [186, 185, 184, 186, 186, 183, 175, 154, 122, 80, 41, 22, 13, 12, 14],
         [186, 185, 185, 186, 186, 185, 173, 151, 118, 72, 23, 19, 13, 13, 14],
         [187, 187, 187, 187, 187, 185, 174, 148, 109, 35, 21, 19, 14, 14, 15],
         [187, 187, 187, 188, 188, 187, 158, 134, 63, 33, 20, 16, 14, 13, 13],
         [189, 188, 188, 189, 188, 184, 155, 110, 62, 29, 16, 13, 15, 13, 11],
         [190, 189, 190, 191, 183, 173, 123, 83, 61, 25, 14, 12, 12, 10, 10],
         [191, 191, 192, 190, 175, 152, 98, 60, 34, 20, 14, 11, 10, 9, 10],
         [187, 188, 191, 184, 172, 128, 77, 42, 24, 16, 13, 9, 9, 9, 10],
         [185, 187, 190, 185, 169, 117, 59, 28, 19, 14, 12, 9, 10, 10, 10],
         [188, 191, 191, 189, 170, 98, 29, 12, 13, 10, 10, 9, 10, 9, 9],
         [192, 196, 194, 174, 140, 76, 19, 10, 16, 13, 11, 10, 11, 9, 9],
         [189, 196, 193, 159, 113, 58, 13, 6, 13, 12, 11, 10, 10, 8, 9]],
        dtype=np.float)

    assert_array_equal(np.round(inpaint_fmm(image, mask, radius=5)), expected)


def test_fmm():
    image = np.array(
        [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
         [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
         [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
         [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
         [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
         [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
         [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
         [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
         [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
         [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=np.float)

    mask = np.array(
        [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=np.uint8)

    expected = np.array(
        [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0.7, 1, 1, 1, 1, 1, 1, 0.7, 0, 0, 0],
         [0, 0, 0, 0.7, 1.4, 1.9, 2, 2, 2, 2, 1.7, 1, 0, 0, 0],
         [0, 0, 0.7, 1.4, 2.1, 2.7, 3, 3, 3, 2.8, 2.3, 1.5, 0.7, 0, 0],
         [0, 0, 1, 1.9, 2.7, 3.4, 3.8, 4, 3.9, 3.5, 2.8, 1.9, 1, 0, 0],
         [0, 0, 1, 2, 3, 3.8, 4.6, 4.9, 4.6, 3.9, 3, 2, 1, 0, 0],
         [0, 0, 1, 2, 3, 4, 4.9, 5.6, 4.9, 4, 3, 2, 1, 0, 0],
         [0, 0, 1, 2, 3, 3.9, 4.6, 4.9, 4.7, 4, 3, 2, 1, 0, 0],
         [0, 0, 1, 2, 2.8, 3.5, 3.9, 4, 4, 3.6, 2.9, 2, 1, 0, 0],
         [0, 0, 1, 1.7, 2.3, 2.8, 3, 3, 3, 2.9, 2.6, 1.9, 1, 0, 0],
         [0, 0, 0.7, 1, 1.5, 1.9, 2, 2, 2, 2, 1.9, 1.4, 0.7, 0, 0],
         [0, 0, 0, 0, 0.7, 1, 1, 1, 1, 1, 1, 0.7, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
        dtype=np.float)

    flag, u, heap = _init_fmm(mask)
    fast_marching_method(image, flag, u, heap, _run_inpaint=False, radius=5)

    assert_array_equal(np.round(u, 1), expected)

if __name__ == "__main__":
    np.testing.run_module_suite()
